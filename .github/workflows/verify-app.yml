name: 'dhis2: verify app'

on:
  push:
    branches:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}

env:
  GIT_AUTHOR_NAME: '@dhis2-bot'
  GIT_AUTHOR_EMAIL: 'apps@dhis2.org'
  GIT_COMMITTER_NAME: '@dhis2-bot'
  GIT_COMMITTER_EMAIL: 'apps@dhis2.org'
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  CI: true

jobs:
  install:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Install
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile
  build:
    runs-on: ubuntu-latest
    needs: [install]
    if: "!contains(github.event.head_commit.message, '[skip ci]')"
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: Build
        run: yarn build

      - uses: actions/upload-artifact@v2
        with:
          name: app-build
          path: |
            **/build
            !**/node_modules
          retention-days: 1

  release:
    runs-on: ubuntu-latest
    needs: build
    if: "!github.event.push.repository.fork && !contains(github.event.head_commit.message, '[skip ci]') && github.actor != 'dependabot[bot]'"
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ env.GH_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - uses: actions/download-artifact@v2
        with:
          name: app-build

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - uses: dhis2/action-semantic-release@use-yarn-version-prepare
        with:
          publish-apphub: true
          publish-github: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          apphub-token: ${{ secrets.DHIS2_BOT_APPHUB_TOKEN }}
          apphub-baseurl: 'https://staging.apps.dhis2.org'

